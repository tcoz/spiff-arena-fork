import logging
from kombu.log import LOG_LEVELS as LOG_LEVELS
from typing import Any, Optional

base_logger: Any
def set_in_sighandler(value: Any) -> None: ...
def in_sighandler() -> None: ...
def get_logger(name: Any): ...
def get_task_logger(name: Any): ...
def mlevel(level: Any): ...

class ColorFormatter(logging.Formatter):
    COLORS: Any = ...
    colors: Any = ...
    use_color: Any = ...
    def __init__(self, fmt: Optional[Any] = ..., use_color: bool = ...) -> None: ...
    def formatException(self, ei: Any): ...
    def format(self, record: Any): ...

class LoggingProxy:
    mode: str = ...
    name: Any = ...
    closed: bool = ...
    loglevel: Any = ...
    logger: Any = ...
    def __init__(self, logger: Any, loglevel: Optional[Any] = ...) -> None: ...
    def write(self, data: Any): ...
    def writelines(self, sequence: Sequence[str]) -> None: ...
    def flush(self) -> None: ...
    def close(self) -> None: ...
    def isatty(self): ...

def get_multiprocessing_logger(): ...
def reset_multiprocessing_logger() -> None: ...
