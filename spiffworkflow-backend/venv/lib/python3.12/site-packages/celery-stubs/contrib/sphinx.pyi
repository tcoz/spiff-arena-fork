from celery.app.task import BaseTask as BaseTask
from sphinx.domains.python import PyModulelevel
from sphinx.ext.autodoc import FunctionDocumenter
from typing import Any

class TaskDocumenter(FunctionDocumenter):
    objtype: str = ...
    member_order: int = ...
    @classmethod
    def can_document_member(cls, member: Any, membername: Any, isattr: Any, parent: Any): ...
    def format_args(self): ...
    def document_members(self, all_members: bool = ...) -> None: ...
    def check_module(self): ...

class TaskDirective(PyModulelevel):
    def get_signature_prefix(self, sig: Any): ...

def autodoc_skip_member_handler(app: Any, what: Any, name: Any, obj: Any, skip: Any, options: Any): ...
def setup(app: Any): ...
