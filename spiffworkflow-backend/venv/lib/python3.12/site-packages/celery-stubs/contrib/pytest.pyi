from .testing import worker as worker
from .testing.app import TestApp as TestApp, setup_default_app as setup_default_app
from typing import Any

NO_WORKER: Any

def pytest_configure(config: Any) -> None: ...
def use_celery_app_trap() -> bool: ...
def celery_session_app(request: Any, celery_config: Any, celery_parameters: Any, celery_enable_logging: Any, use_celery_app_trap: Any) -> None: ...
def celery_session_worker(request: Any, celery_session_app: Any, celery_includes: Any, celery_worker_pool: Any, celery_worker_parameters: Any) -> None: ...
def celery_enable_logging() -> bool: ...
def celery_includes() -> Sequence[str]: ...
def celery_worker_pool() -> Union[str, Any]: ...
def celery_config() -> Mapping[str, Any]: ...
def celery_parameters() -> Mapping[str, Any]: ...
def celery_worker_parameters() -> Mapping[str, Any]: ...
def celery_app(request: Any, celery_config: Any, celery_parameters: Any, celery_enable_logging: Any, use_celery_app_trap: Any) -> None: ...
def celery_worker(request: Any, celery_app: Any, celery_includes: Any, celery_worker_pool: Any, celery_worker_parameters: Any) -> None: ...
def depends_on_current_app(celery_app: Any) -> None: ...
