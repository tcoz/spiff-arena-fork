from kombu.mixins import ConsumerMixin
from typing import Any, Optional

class EventReceiver(ConsumerMixin):
    app: Any = ...
    channel: Any = ...
    handlers: Any = ...
    routing_key: Any = ...
    node_id: Any = ...
    queue_prefix: Any = ...
    exchange: Any = ...
    queue: Any = ...
    clock: Any = ...
    adjust_clock: Any = ...
    forward_clock: Any = ...
    accept: Any = ...
    def __init__(self, channel: Any, handlers: Optional[Any] = ..., routing_key: str = ..., node_id: Optional[Any] = ..., app: Optional[Any] = ..., queue_prefix: Optional[Any] = ..., accept: Optional[Any] = ..., queue_ttl: Optional[Any] = ..., queue_expires: Optional[Any] = ...) -> None: ...
    def process(self, type: Any, event: Any) -> None: ...
    def get_consumers(self, Consumer: Any, channel: Any): ...
    def on_consume_ready(self, connection: Any, channel: Any, consumers: Any, wakeup: bool = ..., **kwargs: Any) -> None: ...
    def itercapture(self, limit: Optional[Any] = ..., timeout: Optional[Any] = ..., wakeup: bool = ...): ...
    def capture(self, limit: Optional[Any] = ..., timeout: Optional[Any] = ..., wakeup: bool = ...) -> None: ...
    def wakeup_workers(self, channel: Optional[Any] = ...) -> None: ...
    def event_from_message(self, body: Any, localize: bool = ..., now: Any = ..., tzfields: Any = ..., adjust_timestamp: Any = ..., CLIENT_CLOCK_SKEW: Any = ...): ...
    @property
    def connection(self): ...
