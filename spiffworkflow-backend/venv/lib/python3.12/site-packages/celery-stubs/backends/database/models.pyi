from .session import ResultModelBase
from typing import Any, Optional

class Task(ResultModelBase):
    __tablename__: str = ...
    __table_args__: Any = ...
    id: Any = ...
    task_id: Any = ...
    status: Any = ...
    result: Any = ...
    date_done: Any = ...
    traceback: Any = ...
    def __init__(self, task_id: Any) -> None: ...
    def to_dict(self): ...
    @classmethod
    def configure(cls, schema: Optional[Any] = ..., name: Optional[Any] = ...) -> None: ...

class TaskExtended(Task):
    __tablename__: str = ...
    __table_args__: Any = ...
    name: Any = ...
    args: Any = ...
    kwargs: Any = ...
    worker: Any = ...
    retries: Any = ...
    queue: Any = ...
    def to_dict(self): ...

class TaskSet(ResultModelBase):
    __tablename__: str = ...
    __table_args__: Any = ...
    id: Any = ...
    taskset_id: Any = ...
    result: Any = ...
    date_done: Any = ...
    def __init__(self, taskset_id: Any, result: Any) -> None: ...
    def to_dict(self): ...
    @classmethod
    def configure(cls, schema: Optional[Any] = ..., name: Optional[Any] = ...) -> None: ...
