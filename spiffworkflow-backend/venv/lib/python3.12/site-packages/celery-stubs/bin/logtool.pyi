from .base import Command
from typing import Any, Optional

class _task_counts(list):
    @property
    def format(self): ...

class Audit:
    ids: Any = ...
    names: Any = ...
    results: Any = ...
    ready: Any = ...
    task_types: Any = ...
    task_errors: int = ...
    on_task_error: Any = ...
    on_trace: Any = ...
    on_debug: Any = ...
    prev_line: Any = ...
    def __init__(self, on_task_error: Optional[Any] = ..., on_trace: Optional[Any] = ..., on_debug: Optional[Any] = ...) -> None: ...
    def run(self, files: Any): ...
    def task_received(self, line: Any, task_name: Any, task_id: Any) -> None: ...
    def task_ready(self, line: Any, task_name: Any, task_id: Any, result: Any) -> None: ...
    def task_error(self, line: Any, task_name: Any, task_id: Any, result: Any) -> None: ...
    def feed(self, line: Any) -> None: ...
    def incomplete_tasks(self): ...
    def report(self): ...

class logtool(Command):
    args: str = ...
    def run(self, what: Optional[Any] = ..., *files: Any, **kwargs: Any): ...
    def stats(self, files: Any) -> None: ...
    def traces(self, files: Any) -> None: ...
    def errors(self, files: Any) -> None: ...
    def incomplete(self, files: Any) -> None: ...
    def debug(self, files: Any) -> None: ...
    def say1(self, line: Any, *_: Any) -> None: ...
