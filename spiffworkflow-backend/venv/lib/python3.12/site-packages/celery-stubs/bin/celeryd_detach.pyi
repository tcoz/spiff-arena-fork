from typing import Any, Optional

def detach(path: Any, argv: Any, logfile: Optional[Any] = ..., pidfile: Optional[Any] = ..., uid: Optional[Any] = ..., gid: Optional[Any] = ..., umask: Optional[Any] = ..., workdir: Optional[Any] = ..., fake: bool = ..., app: Optional[Any] = ..., executable: Optional[Any] = ..., hostname: Optional[Any] = ...): ...

class detached_celeryd:
    usage: str = ...
    version: Any = ...
    description: str = ...
    command: Any = ...
    execv_path: Any = ...
    execv_argv: Any = ...
    app: Any = ...
    def __init__(self, app: Optional[Any] = ...) -> None: ...
    def create_parser(self, prog_name: Any): ...
    def parse_options(self, prog_name: Any, argv: Any): ...
    def execute_from_commandline(self, argv: Optional[Any] = ...) -> None: ...
    def add_arguments(self, parser: Any) -> None: ...
